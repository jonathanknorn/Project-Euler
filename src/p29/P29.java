package p29;

import java.math.BigInteger;
import java.util.HashMap;

import res.Euler;

public class P29 extends Euler {

	public static void main(String[] args) {
		Euler p = new P29();
		System.out.println(p.description());
		System.out.println("\n------------------------------------------\n");
		System.out.println(p.run());
	}

	@Override
	public long run() {
		int lim = 100;
		HashMap<String, String> m = new HashMap<String, String>();
		for(int a = 2; a <= lim; a++){
			for(int b = 2; b <= lim; b++){
				String s = BigInteger.valueOf(a).pow(b).toString(); 
				m.put(s,s);
			}
		}
		return m.size();
	}

	@Override
	public String getName() {
		return "P29";
	}
	
//	@Override
	public String description() {
		return "Consider all integer combinations of ab for 2 <= a <= 5 and 2 <= b <= 5:\n\n"
				+ "\t2^2=4, 2^3=8, 2^4=16, 2^5=32\n"
				+ "\t3^2=9, 3^3=27, 3^4=81, 3^5=243\n"
				+ "\t4^2=16, 4^3=64, 4^4=256, 4^5=1024\n"
				+ "\t5^2=25, 5^3=125, 5^4=625, 5^5=3125\n\n"
				+ "If they are then placed in numerical order, with any repeats removed,"
				+ "we get the following sequence of 15 distinct terms:\n\n"
				+ "\t\t4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125\n\n"
				+ "How many distinct terms are in the sequence generated by a^b for\n"
				+ "2 <= a <= 100 and 2 <= b <= 100?";
	}

}
